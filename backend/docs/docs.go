// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/application/dashboard": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Application"
                ],
                "summary": "Общие данные для панели",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dashboard"
                        }
                    }
                }
            }
        },
        "/asset/add": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Создать новый актив пользователя",
                "parameters": [
                    {
                        "description": "Add asset",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AssetAdd"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Asset"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            }
        },
        "/asset/all": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Активы пользователя",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.AssetList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            }
        },
        "/asset/market/{id}": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Получить все активы по идентификатору ценной бумаги/товара",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "page",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "size",
                        "description": "number of elements per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "orderBy",
                        "description": "filter name",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AssetList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            }
        },
        "/asset/total-all": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Активы пользователя, подсчитанные",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AssetTotal"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            }
        },
        "/asset/{id}": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Получить актив по идентификатору",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "asset_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Asset"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Обновить данные актива",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "asset_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Asset"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset"
                ],
                "summary": "Удалить актив",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "asset_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            }
        },
        "/auth/all": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Получить список всех пользователей",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "page",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "size",
                        "description": "number of elements per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "orderBy",
                        "description": "filter name",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UsersList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            }
        },
        "/auth/check": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Проверить токен на действительность",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Проверить зарегистрированного пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserBase"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            }
        },
        "/auth/confirmed": {
            "get": {
                "description": "Подтверждается почта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Подтверждение почты",
                "parameters": [
                    {
                        "type": "string",
                        "format": "code",
                        "description": "code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            }
        },
        "/auth/find": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Найти пользователя по имени",
                "parameters": [
                    {
                        "type": "string",
                        "format": "username",
                        "description": "username",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UsersList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Войти в систему, вернуть пользователя и установить сеанс",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Вход пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserWithToken"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Удаление сеанса пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Выйти из системы",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Обновить и вернуть новые токены",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Обновить токен",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tokens"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Зарегистрировать и вернуть пользователя и токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Зарегистрировать нового пользователя",
                "parameters": [
                    {
                        "description": "register user",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/auth/token": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Получить токен CSRF, обязательный cookie сеанса авторизации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Получить токен CSRF",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            }
        },
        "/auth/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Получить пользователя по идентификатору",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Обновить существующего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Обновить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Удалить учетную запись пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            }
        },
        "/auth/{id}/avatar": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Опубликовать аватар пользователя",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Body with image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "bucket",
                        "description": "aws s3 bucket",
                        "name": "bucket",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestError"
                        }
                    }
                }
            }
        },
        "/market/all": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Получить все ценные бумаги/товары с разбивкой на страницы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Получить все ценные бумаги/товары",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "page",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "size",
                        "description": "number of elements per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "orderBy",
                        "description": "filter name",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MarketList"
                        }
                    }
                }
            }
        },
        "/market/create": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Добавить новую ценную бумаги/товара",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Market"
                        }
                    }
                }
            }
        },
        "/market/parse": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Спарсить",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/market/search": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Искать ценную бумагу/товар по названию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Поиск по названию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "page",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "size",
                        "description": "number of elements per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "orderBy",
                        "description": "filter name",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MarketList"
                        }
                    }
                }
            }
        },
        "/market/{id}": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Получить по id ценную бумагу/товар",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Market"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Изменить данные ценной бумаги/товара",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Market"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Удалить ценную бумагу/товар",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "market_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/portfolio/active-total": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolio"
                ],
                "summary": "Портфель пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PortfolioList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.RestErr"
                        }
                    }
                }
            }
        },
        "/portfolio/add": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolio"
                ],
                "summary": "Портфели пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PortfolioStats"
                        }
                    }
                }
            }
        },
        "/portfolio/all-stats": {
            "get": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolio"
                ],
                "summary": "Портфели пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PortfolioStats"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httpErrors.RestErr": {
            "type": "object"
        },
        "httpErrors.RestError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.AccessToken": {
            "type": "object",
            "properties": {
                "prefixToken": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.Asset": {
            "type": "object",
            "required": [
                "amount",
                "marketId",
                "portfolioId",
                "quantity"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "assetId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "marketId": {
                    "type": "string"
                },
                "notationAt": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.AssetAdd": {
            "type": "object",
            "required": [
                "amount",
                "marketId",
                "portfolioId",
                "quantity"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "marketId": {
                    "type": "string"
                },
                "notationAt": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "model.AssetBase": {
            "type": "object",
            "required": [
                "amount",
                "portfolioId",
                "quantity",
                "ticker",
                "title",
                "userId"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "assetId": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "notationAt": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "ticker": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.AssetList": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AssetBase"
                    }
                },
                "hasMore": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "model.AssetTotal": {
            "type": "object",
            "properties": {
                "averagePurchasePrice": {
                    "type": "integer"
                },
                "firstNotationAt": {
                    "type": "string"
                },
                "identify": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "marketId": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                },
                "totalQuantity": {
                    "type": "integer"
                }
            }
        },
        "model.Currency": {
            "type": "object",
            "required": [
                "description",
                "title"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Dashboard": {
            "type": "object",
            "properties": {
                "currencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Currency"
                    }
                }
            }
        },
        "model.Market": {
            "type": "object",
            "required": [
                "currencyId",
                "instrumentId",
                "ticker",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "instrumentId": {
                    "type": "string"
                },
                "marketId": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.MarketBase": {
            "type": "object",
            "required": [
                "descInstrument",
                "ticker",
                "title",
                "titleInstrument"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "descInstrument": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "marketId": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "titleInstrument": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.MarketList": {
            "type": "object",
            "properties": {
                "hasMore": {
                    "type": "boolean"
                },
                "markets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MarketBase"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "model.Portfolio": {
            "type": "object",
            "required": [
                "active",
                "currencyId",
                "title",
                "userId"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.PortfolioList": {
            "type": "object",
            "properties": {
                "assetTotal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AssetTotal"
                    }
                },
                "portfolio": {
                    "$ref": "#/definitions/model.Portfolio"
                }
            }
        },
        "model.PortfolioStats": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "assetAmount": {
                    "type": "integer"
                },
                "assetQuantity": {
                    "type": "integer"
                },
                "currencyDesc": {
                    "type": "string"
                },
                "currencyId": {
                    "type": "string"
                },
                "currencyTitle": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.RefreshToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "model.Tokens": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "$ref": "#/definitions/model.AccessToken"
                },
                "refreshToken": {
                    "$ref": "#/definitions/model.RefreshToken"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.UserBase": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.UserWithToken": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "$ref": "#/definitions/model.AccessToken"
                },
                "refreshToken": {
                    "$ref": "#/definitions/model.RefreshToken"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.UsersList": {
            "type": "object",
            "properties": {
                "hasMore": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Auth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "REST API",
	Description: "REST API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
